package tech.projectmatris.antimalwareapp.activities;


import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;

import java.io.IOException;

public class TestAdapter {
    protected static final String TAG = "DataAdapter";

    private final Context mContext;
    private SQLiteDatabase mDb;
    private  tech.projectmatris.antimalwareapp.activities.DatahelperActivity mDbHelper;

    public TestAdapter(Context context) {
        this.mContext = context;
        mDbHelper = new  tech.projectmatris.antimalwareapp.activities.DatahelperActivity(mContext);

        Log.v(TAG, "TestAdapter");
    }

    public TestAdapter createDatabase() throws SQLException {
        try {
            mDbHelper.createDataBase();
        } catch (IOException mIOException) {
            Log.e(TAG, mIOException.toString() + "  UnableToCreateDatabase");
            throw new Error("UnableToCreateDatabase");
        }

        Log.v(TAG, "TestAdapter createDatabase");
        return this;
    }

    public TestAdapter open() throws SQLException {
        try {
            mDbHelper.openDataBase();
            mDbHelper.close();
            mDb = mDbHelper.getReadableDatabase();
        } catch (SQLException mSQLException) {
            Log.e(TAG, "open >>" + mSQLException.toString());
            throw mSQLException;
        }

        Log.v(TAG, "TestAdapter Open");
        return this;
    }

    public void close() {
        mDbHelper.close();

        Log.v(TAG, "TestAdapter close");

    }


    public long InsertUser(String uname, String umob, String upass) {
        long i;
        ContentValues values = new ContentValues();
        values.put("FullName", uname);
        values.put("Mobile", umob);
        values.put("Password", upass);
        i = mDb.insert("User", null, values);
        return i;

    }



    public Cursor getpass() {
        String sql="select Mobile from User";
        Cursor c=mDb.rawQuery(sql, null);
        return c;

    }

    public long SaveAddress(String aaone, String aatwo, String aathree, String almark,
                            String aastate, String aacity, String aarea, String azip) {
        long i;
        ContentValues values = new ContentValues();


        values.put("A_One", aaone);
        values.put("A_Two", aatwo);
        values.put("A_Three", aathree);
        values.put("A_Mark", almark);
        values.put("A_State", aastate);
        values.put("A_City", aacity);
        values.put("A_Area", aarea);
        values.put("A_Zip", azip);
        i = mDb.insert("Address", null, values);
        return i;


    }

    public long InsertFoodmenu(String ldinn, String sdate, String sename, String semname,
                               String seprice, String seaddress, String secontact) {


        long i;
        ContentValues values = new ContentValues();
        values.put("F_Type", ldinn);
        values.put("F_Date", sdate);
        values.put("F_Name", sename);
        values.put("F_Mname", semname);
        values.put("F_Mprice", seprice);
        values.put("F_Add", seaddress);
        values.put("F_Mob", secontact);

        i = mDb.insert("Menu", null, values);
        return i;

    }


    public Cursor selecfood() {
        String q = "Select * from Menu ";
        Cursor c = mDb.rawQuery(q, null);
        return c;
    }

    public Cursor getMenuPrice(String cost) {
        String q = "Select * from Menu where F_Mname='" + cost + "'";
        Cursor c = mDb.rawQuery(q, null);
        return c;
    }

    public long InsertCard(String ctype,String cardno,String bnam, String cardem, String cardey, String cardcv) {

        long i;
        ContentValues values = new ContentValues();
        values.put("C_Type", ctype);
        values.put("C_Bname",bnam);
        values.put("C_No", cardno);
        values.put("C_Emm", cardem);
        values.put("C_Eyy", cardey);
        values.put("C_Date", cardcv);

        i = mDb.insert("Addcard", null, values);
        return i;
    }

    public Cursor getCardNumber() {
        String q = "Select * from Addcard ";
        Cursor c = mDb.rawQuery(q, null);
        return c;
    }

    public Cursor getcarddetails() {
        String q = "Select * from Addcard ";
        Cursor c = mDb.rawQuery(q, null);
        return c;
    }

    public int checkrecord() {
        int i;
        String sql="select count(*) from Addcard";
        Cursor c=mDb.rawQuery(sql,null);
        //Log.w("Cursor", c.getString(0));
        c.moveToNext();
        i=Integer.parseInt(c.getString(0));
        c.close();
        return (i);

    }

    public long insertAmount(String amount, String cvvnumber) {
        long i;
        ContentValues values = new ContentValues();
        values.put("Amt", amount);
        values.put("Cvv",cvvnumber);
        i = mDb.insert("Amount", null, values);
        return i;
    }

    public Cursor getAmount() {
        String q="SELECT SUM(Amt) FROM Amount";
        Cursor c=mDb.rawQuery(q,null);
        return  c;
    }


    public int checkwalletbalance() {
        int i;
        String sql="select count(*) from Amount";
        Cursor c=mDb.rawQuery(sql,null);
        //Log.w("Cursor", c.getString(0));
        c.moveToNext();
        i=Integer.parseInt(c.getString(0));
        c.close();
        return (i);

    }



    public long DevloperRegistration(String dno, String dname, String dmob, String dadd, String dedu) {
        long i;
        ContentValues values = new ContentValues();
        values.put("D_Id", dno);
        values.put("D_Name",dname);
        values.put("D_Add", dadd);
        values.put("D_Mob",dmob);
        values.put("D_Edu", dedu);
      //  values.put("D_Tech",dtch);
       // values.put("D_Pass",dpass);

        i = mDb.insert("DevloperReg", null, values);
        return i;
    }


    public long CustomerSignup(String id, String name, String add, String mob, String bname) {
        long i;
        ContentValues values = new ContentValues();
        values.put("C_Id", id);
        values.put("C_Name",name);
        values.put("C_Address", add);
        values.put("C_Mobile",mob);
        values.put("C_Business", bname);


        i = mDb.insert("CustomerReg", null, values);
        return i;
    }

    public int checkUserLogin(String userid, String password) {

        int i;
        String sql = "select count(*) from CustomerReg where C_Mobile='" + userid + "' and C_Business='" + password + "'";
        Cursor c = mDb.rawQuery(sql, null);
        //Log.w("Cursor", c.getString(0));
        c.moveToNext();
        i = Integer.parseInt(c.getString(0));
        c.close();
        return (i);
    }

    public Cursor selectdevloper() {
        String q = "Select * from DevloperReg ";
        Cursor c = mDb.rawQuery(q, null);
        return c;
    }
    public Cursor developerincrementid() {
        String sql = "select max(D_Id) from DevloperReg";
        Cursor c = mDb.rawQuery(sql, null);
        return c;
    }



    public long InsertAppData(String appid, String pbus, String appname, String appdb, String appuse, String appdet) {
        long i;
        ContentValues values = new ContentValues();
        values.put("A_id", appid);
        values.put("A_Bus",pbus);
        values.put("A_Name", appname);
        values.put("A_Dbtype",appdb);
        values.put("A_Appuse", appuse);
        values.put("A_odetails",appdet);


        i = mDb.insert("AppData", null, values);
        return i;

    }

    public Cursor selectappdata() {
        String q = "Select * from AppData ";
        Cursor c = mDb.rawQuery(q, null);
        return c;
    }

    public Cursor appdataincrementid() {
        String sql = "select max(A_id) from AppData";
        Cursor c = mDb.rawQuery(sql, null);
        return c;
    }

    public Cursor getDevloperdetalis() {
        String q = "Select * from AppData ";
        Cursor c = mDb.rawQuery(q, null);
        return c;
    }

    public Cursor getApiDetalis(String type) {
        String q = "Select * from APITable where A_Name='" + type + "'";
        Cursor c = mDb.rawQuery(q, null);
        return c;
    }


    public Cursor getapi() {
        String q = "Select * from APITable ";
        Cursor c = mDb.rawQuery(q, null);
        return c;
    }


    public long AddMaskData(String name, String time) {
        long i;
        ContentValues values = new ContentValues();
        values.put("Yes", name+  time);



        i = mDb.insert("Mask", null, values);
        return i;
    }

    public Cursor selecmaskinfo() {
        String q = "Select * from Mask ";
        Cursor c = mDb.rawQuery(q, null);
        return c;
    }

    public long AddNoMaskData(String name, String time) {
        long i;
        ContentValues values = new ContentValues();
        values.put("No", name+  time);



        i = mDb.insert("Mask", null, values);
        return i;
    }
}










	
	
	